class dactyloscopy {

    'use strict';
    constructor() {

        if ('WebkitAppearance' in document.documentElement.style) { if (escape(navigator.javaEnabled.toString()) === 'function%20javaEnabled%28%29%20%7B%20%5Bnative%20code%5D%20%7D') { this.engine = 'V8'; } else { this.engine = 'JSC'; } } else { this.engine = "Not a WebKit browser"; }
        var canvas = document.createElement("canvas")
        var webgl = canvas.getContext("webgl") || canvas.getContext("experimental-webgl")
        var gpu = webgl.getParameter(webgl.getExtension("webgl_debug_renderer_info").UNMASKED_RENDERER_WEBGL)
        this.webdriver = navigator.webdriver
        this.buildID = navigator.buildID
        this.platform = navigator.platform
        this.appName = navigator.appName
        this.cookieEnabled = navigator.cookieEnabled
        this.hardwareConcurrency = navigator.hardwareConcurrency
        this.language = navigator.language
        this.maxTouchPoints = navigator.maxTouchPoints
        this.deviceMemory = navigator.deviceMemory
        this.gpu = gpu
        this.screen = screen.width.toString() + 'x' + screen.height.toString()
        if (navigator.userAgent.indexOf("Chrome") != -1) { this.browser = "Google Chrome"; } else if (navigator.userAgent.indexOf("Firefox") != -1) { this.browser = "Mozilla Firefox"; } else if (navigator.userAgent.indexOf("MSIE") != -1) { this.browser = "Internet Exploder"; } else if (navigator.userAgent.indexOf("Edge") != -1) { this.browser = "Internet Exploder"; } else if (navigator.userAgent.indexOf("Safari") != -1) { this.browser = "Safari"; } else if (navigator.userAgent.indexOf("Opera") != -1) { this.browser = "Opera"; } else if (navigator.userAgent.indexOf("YaBrowser") != -1) { this.browser = "YaBrowser"; } else { this.browser = "Others"; }
    }

    'use strict';
    _hash(string) {
        var hash = 0;
        if (string.length == 0) return hash;
        for (var i = 0; i < string.length; i++) {
            var char = string.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash;
        }
        if (hash < 0) hash = hash * -1
        return hash;
    }

    'use strict';
    canvasFingerprint() {
        var canvas = document.createElement("canvas");
        canvas.style.cssText = "display: none;"
        document.body.appendChild(canvas);
        var ctx = canvas.getContext("2d");
        ctx.fillStyle = "rgb(255,0,255)";
        ctx.beginPath();
        ctx.rect(20, 20, 150, 100);
        ctx.fill();
        ctx.stroke();
        ctx.closePath();
        ctx.beginPath();
        ctx.fillStyle = "rgb(0,255,255)";
        ctx.arc(50, 50, 50, 0, Math.PI * 2, true);
        ctx.fill();
        ctx.stroke();
        ctx.closePath();
        var txt = 'abz190#$%^@£éú';
        ctx.textBaseline = "top";
        ctx.font = '17px "Arial 17"';
        ctx.textBaseline = "alphabetic";
        ctx.fillStyle = "rgb(255,5,5)";
        ctx.rotate(.03);
        ctx.fillText(txt, 4, 17);
        ctx.fillStyle = "rgb(155,255,5)";
        ctx.shadowBlur = 8;
        ctx.shadowColor = "red";
        ctx.fillRect(20, 12, 100, 5);
        var hash = this._hash(canvas.toDataURL())
        canvas.remove()
        return hash
    }

    'use strict';
    browserFingerprint() {
        var data = [
            this.webdriver,
            this.buildID,
            this.platform,
            this.appName,
            this.cookieEnabled,
            this.hardwareConcurrency,
            this.language,
            this.maxTouchPoints,
            this.deviceMemory,
            this.gpu,
            this.canvasFingerprint()
        ]
        return this._hash(data.toString())
    }

}